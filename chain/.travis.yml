rust: &rust
  language: rust
  sudo: required
  dist: trusty
  addons:
      apt:
          packages:
              - libssl-dev
              - libcurl4-openssl-dev
              - libelf-dev
              - libdw-dev
              - cmake
              - gcc
              - binutils-dev    
  cache: cargo
  env:
    - RUSTFLAGS=-Ctarget-feature=+aes,+ssse3

  script:
  - cargo clean
  - cargo build
  - cargo test
  - |
    if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
      (rustfmt --version || rustup component add rustfmt) &&
      cargo fmt -- --check --color=auto &&
      (cargo-clippy --version || rustup component add clippy) &&
      cargo clippy -- -D warnings 
    fi

  after_success: |
    if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      cmake .. &&
      make &&
      sudo make install &&
      cd ../.. &&
      rm -rf kcov-master &&  
      cargo-kcov --version || cargo install cargo-kcov;
      travis_wait 30 cargo kcov --all;
      bash <(curl -s https://codecov.io/bash);
    fi

jobs:
  allow_failures:
    - rust: nightly
  include:
    - <<: *rust
      rust: stable
    - <<: *rust
      rust: beta
    - <<: *rust
      rust: nightly
    # MUST_TODO: enable when tests are ported to use the new dev-utils + client support
    # - name: Integration Tests
    #   language: node_js
    #   node_js:
    #     - "10"
    #   services:
    #     - docker
    #   before_script:
    #     - |
    #       sudo cp integration-tests/docker/wait-for-it.sh /usr/local/bin
    #       sudo chmod +x /usr/local/bin/wait-for-it.sh
    #     - |
    #       cd integration-tests
    #       docker-compose up -d
    #       docker-compose ps
    #       docker-compose logs -t --tail="all"
    #   script:
    #     - |
    #       cd client-rpc
    #       yarn
    #       /usr/local/bin/wait-for-it.sh 127.0.0.1:16659 --strict -- yarn test
